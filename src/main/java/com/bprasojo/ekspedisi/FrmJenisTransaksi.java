/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.bprasojo.ekspedisi;

import com.bprasojo.ekspedisi.dao.JenisTransaksiDAO;
import com.bprasojo.ekspedisi.dao.PerkiraanDAO;
import com.bprasojo.ekspedisi.model.Bank;
import com.bprasojo.ekspedisi.model.JenisTransaksi;
import com.bprasojo.ekspedisi.model.Perkiraan;
import com.bprasojo.ekspedisi.model.StakeHolder;
import com.bprasojo.ekspedisi.model.User;
import com.bprasojo.ekspedisi.utils.AppUtils;
import com.bprasojo.ekspedisi.utils.CustomFocusTraversalPolicy;
import com.bprasojo.ekspedisi.utils.LookupForm;
import java.beans.PropertyVetoException;
import java.sql.SQLException;
import java.util.Date;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 */
public class FrmJenisTransaksi extends javax.swing.JInternalFrame {

    /**
     * Creates new form FrmKasBonKaryawan
     */
    
//    Perkiraan jenisKasBon = null;
//    Bank bank = null;
    Perkiraan perkiraan = null;
    PerkiraanDAO perkiraanDAO = null;
    
    JenisTransaksi jenisTransaksi = null;
    JenisTransaksiDAO jenisTransaksiDAO = null;
    
    private int currentPage = 1;
    private boolean SilakanLoadData = false;
    
    private DefaultTableModel tableModel;
    private User user;
    
    public FrmJenisTransaksi(User user) {
        this();
        this.user = user;
    }
    public FrmJenisTransaksi() {
        initComponents();

        jenisTransaksiDAO = new JenisTransaksiDAO();
        perkiraanDAO = new PerkiraanDAO();
        
        try {
            setMaximum(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(FrmJenisTransaksi.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        edFilter.setText("");
        
        InisialisasiTableJenisTransaksi();
        
        
        SilakanLoadData = true;
        LoadDataJenisTransaksi(currentPage);
        setStatusTombol("awal");
        
        
        inisialisasiEventTableModel();
        
        pnlInput.setFocusTraversalPolicy(new CustomFocusTraversalPolicy(edKode, edNama, btnAkun));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        btnNew = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnSimpan = new javax.swing.JButton();
        btnBatal = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnKeluar = new javax.swing.JButton();
        pnlInput = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        edKodeAkun = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        edNamaAkun = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        edNama = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        edKode = new javax.swing.JTextField();
        btnAkun = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        pnlFilter = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        edTglAwal = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        edTglAkhir = new com.toedter.calendar.JDateChooser();
        jLabel10 = new javax.swing.JLabel();
        edFilter = new javax.swing.JTextField();
        pnlNextPrev = new javax.swing.JPanel();
        btnPrev = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblJenisTransaksi = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Kas Bon Karyawan");

        jPanel1.setLayout(new java.awt.BorderLayout());

        jToolBar1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jToolBar1.setRollover(true);

        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Add32.png"))); // NOI18N
        btnNew.setText("Tambah");
        btnNew.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnNew.setFocusable(false);
        btnNew.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNew.setMaximumSize(new java.awt.Dimension(60, 70));
        btnNew.setMinimumSize(new java.awt.Dimension(60, 70));
        btnNew.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });
        jToolBar1.add(btnNew);

        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Edit32.png"))); // NOI18N
        btnEdit.setText("Edit");
        btnEdit.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnEdit.setFocusable(false);
        btnEdit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEdit.setMaximumSize(new java.awt.Dimension(60, 70));
        btnEdit.setMinimumSize(new java.awt.Dimension(60, 70));
        btnEdit.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        jToolBar1.add(btnEdit);

        btnSimpan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Save32.png"))); // NOI18N
        btnSimpan.setText("Simpan");
        btnSimpan.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnSimpan.setFocusable(false);
        btnSimpan.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSimpan.setMaximumSize(new java.awt.Dimension(60, 70));
        btnSimpan.setMinimumSize(new java.awt.Dimension(60, 70));
        btnSimpan.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });
        jToolBar1.add(btnSimpan);

        btnBatal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Undo32.png"))); // NOI18N
        btnBatal.setText("Batal");
        btnBatal.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnBatal.setFocusable(false);
        btnBatal.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnBatal.setMaximumSize(new java.awt.Dimension(60, 70));
        btnBatal.setMinimumSize(new java.awt.Dimension(60, 70));
        btnBatal.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBatalActionPerformed(evt);
            }
        });
        jToolBar1.add(btnBatal);

        btnHapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Delete32.png"))); // NOI18N
        btnHapus.setText("Hapus");
        btnHapus.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnHapus.setFocusable(false);
        btnHapus.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnHapus.setMaximumSize(new java.awt.Dimension(60, 70));
        btnHapus.setMinimumSize(new java.awt.Dimension(60, 70));
        btnHapus.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });
        jToolBar1.add(btnHapus);

        btnKeluar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Close32.png"))); // NOI18N
        btnKeluar.setText("Keluar");
        btnKeluar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnKeluar.setFocusable(false);
        btnKeluar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnKeluar.setMaximumSize(new java.awt.Dimension(60, 70));
        btnKeluar.setMinimumSize(new java.awt.Dimension(60, 70));
        btnKeluar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeluarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnKeluar);

        jPanel1.add(jToolBar1, java.awt.BorderLayout.NORTH);

        pnlInput.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pnlInput.setFocusCycleRoot(true);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Kode");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Nama Akun");

        edNamaAkun.setEditable(false);
        edNamaAkun.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        edNamaAkun.setEnabled(false);

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Nama");

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Nama Akun");

        edKode.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        btnAkun.setText("...");
        btnAkun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAkunActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlInputLayout = new javax.swing.GroupLayout(pnlInput);
        pnlInput.setLayout(pnlInputLayout);
        pnlInputLayout.setHorizontalGroup(
            pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInputLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(edNamaAkun, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlInputLayout.createSequentialGroup()
                        .addComponent(edKodeAkun)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAkun))
                    .addComponent(edKode)
                    .addComponent(edNama, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE))
                .addContainerGap(446, Short.MAX_VALUE))
        );
        pnlInputLayout.setVerticalGroup(
            pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInputLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(edKode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(edNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(edKodeAkun, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(btnAkun))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(edNamaAkun, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(pnlInput, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.NORTH);

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel3.setLayout(new java.awt.BorderLayout());

        jLabel1.setText("Periode");

        edTglAwal.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                edTglAwalPropertyChange(evt);
            }
        });

        jLabel2.setText("s.d.");

        edTglAkhir.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                edTglAkhirPropertyChange(evt);
            }
        });

        jLabel10.setText("Filter");

        edFilter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                edFilterKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout pnlFilterLayout = new javax.swing.GroupLayout(pnlFilter);
        pnlFilter.setLayout(pnlFilterLayout);
        pnlFilterLayout.setHorizontalGroup(
            pnlFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFilterLayout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(edTglAwal, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(12, 12, 12)
                .addComponent(edTglAkhir, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(edFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
        pnlFilterLayout.setVerticalGroup(
            pnlFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFilterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(pnlFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10)
                        .addComponent(edFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(edTglAkhir, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(edTglAwal, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10))
        );

        jPanel3.add(pnlFilter, java.awt.BorderLayout.NORTH);

        pnlNextPrev.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnPrev.setText("<< Prev");
        btnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevActionPerformed(evt);
            }
        });

        btnNext.setText("Next >>");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlNextPrevLayout = new javax.swing.GroupLayout(pnlNextPrev);
        pnlNextPrev.setLayout(pnlNextPrevLayout);
        pnlNextPrevLayout.setHorizontalGroup(
            pnlNextPrevLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlNextPrevLayout.createSequentialGroup()
                .addContainerGap(579, Short.MAX_VALUE)
                .addComponent(btnPrev)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNext)
                .addContainerGap())
        );
        pnlNextPrevLayout.setVerticalGroup(
            pnlNextPrevLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlNextPrevLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlNextPrevLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNext)
                    .addComponent(btnPrev))
                .addContainerGap())
        );

        jPanel3.add(pnlNextPrev, java.awt.BorderLayout.PAGE_END);

        tblJenisTransaksi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblJenisTransaksi.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tblJenisTransaksiFocusGained(evt);
            }
        });
        jScrollPane1.setViewportView(tblJenisTransaksi);

        jPanel3.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel3, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        jenisTransaksi = new JenisTransaksi();
//        bank = null;
        
        AppUtils.setDefaultValues(edKode, edNama, edKodeAkun, edNamaAkun);
        
        
        
        
        setStatusTombol("tambah");
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        setStatusTombol("edit");
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        if (validasiInput() == false){
            return;
        }

        try {
            jenisTransaksi.setKode(edKode.getText().trim());
            jenisTransaksi.setNama(edNama.getText().trim());
            jenisTransaksi.setAkunId(perkiraan.getId());
            jenisTransaksi.setUserCreate(user.getUsername());
            jenisTransaksi.setUserUpdate(user.getUsername());
            
            jenisTransaksiDAO.save(jenisTransaksi);
            

            AppUtils.showInfoDialog("Data berhasil disimpan");
            LoadDataJenisTransaksi(currentPage);
            
            setStatusTombol("selected");

        } catch (SQLException ex) {
            AppUtils.showErrorDialog("Gagal menyimpan data dengan error :\n" + ex.getMessage());
        }
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBatalActionPerformed
        setStatusTombol("awal");
    }//GEN-LAST:event_btnBatalActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        if (jenisTransaksi == null){
            AppUtils.showWarningDialog("Tidak ada data yang dihapus");
            return;
        }
        
        boolean userConfirmed = AppUtils.showConfirmDialog("Apakah Anda yakin akan menghapus data?");

        if (userConfirmed) {
            try {
                jenisTransaksiDAO.delete(jenisTransaksi.getId());
                setStatusTombol("awal");
                LoadDataJenisTransaksi(currentPage);
            } catch (SQLException ex) {
                AppUtils.showErrorDialog("Ada kesalahan hapus data dengan error :\n" + ex.getMessage());
            }
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeluarActionPerformed
        dispose();
    }//GEN-LAST:event_btnKeluarActionPerformed

    private void edTglAwalPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_edTglAwalPropertyChange
        if (SilakanLoadData){
            currentPage = 1;
            LoadDataJenisTransaksi(currentPage);
        }
    }//GEN-LAST:event_edTglAwalPropertyChange

    private void edTglAkhirPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_edTglAkhirPropertyChange
        if (SilakanLoadData){
            currentPage = 1;
            LoadDataJenisTransaksi(currentPage);
        }
    }//GEN-LAST:event_edTglAkhirPropertyChange

    private void edFilterKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_edFilterKeyReleased
        if (SilakanLoadData){
            currentPage = 1;
            LoadDataJenisTransaksi(currentPage);
        }
    }//GEN-LAST:event_edFilterKeyReleased

    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        if (currentPage > 1) {
            currentPage--;
            LoadDataJenisTransaksi(currentPage);
        }
    }//GEN-LAST:event_btnPrevActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        currentPage++;
        LoadDataJenisTransaksi(currentPage);
    }//GEN-LAST:event_btnNextActionPerformed

    private void tblJenisTransaksiFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblJenisTransaksiFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_tblJenisTransaksiFocusGained

    private void btnAkunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAkunActionPerformed
        String sqlQuery = "SELECT " +
                            " concat(REPEAT(' ', level * 4), kode) as kode_akun, " +
                            " concat(REPEAT(' ', level * 4), nama) as nama_akun " +
                            " FROM perkiraan " +
                            " ORDER BY kode";
        
        LookupForm lookupForm = new LookupForm(this, sqlQuery, true);
        Map<String, Object> selectedRecord = lookupForm.getSelectedRecord();
        if (selectedRecord != null) {
            try {
                // Mengambil nilai dengan nama kolom
                String kode = selectedRecord.get("kode_akun").toString().trim();
                perkiraan = perkiraanDAO.getPerkiraanByKode(kode);
                edKodeAkun.setText(perkiraan.getKode());
                edNamaAkun.setText(perkiraan.getNama());
            } catch (SQLException ex) {
                Logger.getLogger(FrmTransaksiKas.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        } else {
            JOptionPane.showMessageDialog(this, "Tidak ada data yang dipilih.");
        }
    }//GEN-LAST:event_btnAkunActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAkun;
    private javax.swing.JButton btnBatal;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnKeluar;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrev;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JTextField edFilter;
    private javax.swing.JTextField edKode;
    private javax.swing.JTextField edKodeAkun;
    private javax.swing.JTextField edNama;
    private javax.swing.JTextField edNamaAkun;
    private com.toedter.calendar.JDateChooser edTglAkhir;
    private com.toedter.calendar.JDateChooser edTglAwal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JPanel pnlFilter;
    private javax.swing.JPanel pnlInput;
    private javax.swing.JPanel pnlNextPrev;
    private javax.swing.JTable tblJenisTransaksi;
    // End of variables declaration//GEN-END:variables

    
    
    private void setStatusTombol(String mode){
        switch (mode) {
            case "awal" -> {
                btnNew.setEnabled(true);
                btnEdit.setEnabled(false);
                btnSimpan.setEnabled(false);
                btnBatal.setEnabled(false);
                btnHapus.setEnabled(false);
                SetEnableKomponenInput(false);
            }
            case "tambah" -> {
                btnNew.setEnabled(false);
                btnEdit.setEnabled(false);
                btnSimpan.setEnabled(true);
                btnBatal.setEnabled(true);
                btnHapus.setEnabled(false);
                SetEnableKomponenInput(true);
            }
            case "edit" -> {
                btnNew.setEnabled(false);
                btnEdit.setEnabled(false);
                btnSimpan.setEnabled(true);
                btnBatal.setEnabled(true);
                btnHapus.setEnabled(true);
                SetEnableKomponenInput(true);
            }
            case "selected" -> {
                btnNew.setEnabled(true);
                btnEdit.setEnabled(true);
                btnSimpan.setEnabled(false);
                btnBatal.setEnabled(false);
                btnHapus.setEnabled(true);
                SetEnableKomponenInput(false);
            }
            default -> {
            }
        }
    }

    private boolean validasiInput() {
        if (edKode.getText().trim().equals("")){
            AppUtils.showWarningDialog("Kode transaksi belum diisi");
            edKode.requestFocus();
            return false;
        }
        
        if (edNama.getText().trim().equals("")){
            AppUtils.showWarningDialog("Nama ransaksi belum diisi");
            edNama.requestFocus();
            return false;
        }
        
        if (perkiraan == null){
            AppUtils.showWarningDialog("Akun belum diisi");
            edKodeAkun.requestFocus();
            return false;
        }        
        
        return true;
        
    }
    
    private void inisialisasiEventTableModel() {
        tblJenisTransaksi.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                // Memeriksa apakah ada baris yang dipilih
                if (!e.getValueIsAdjusting()) {
                    int selectedRow = tblJenisTransaksi.getSelectedRow(); // Mendapatkan baris yang dipilih
                    if (selectedRow != -1) {
                        
                        Integer id = (Integer) tblJenisTransaksi.getModel().getValueAt(selectedRow, 0);
                        LoadJenisTransaksi(id);
                        setStatusTombol("selected");
                    }
                }
            }

            private void LoadJenisTransaksi(Integer id) {
                try {
                    jenisTransaksi = jenisTransaksiDAO.getById(id);
                    if (jenisTransaksi != null){
                        edKode.setText(jenisTransaksi.getKode());
                        edNama.setText(jenisTransaksi.getNama());
                        
                        perkiraan = perkiraanDAO.getById(jenisTransaksi.getAkunId());
                        if (perkiraan != null){
                            edKodeAkun.setText(perkiraan.getKode());
                            edNamaAkun.setText(perkiraan.getNama());
                        } else {
                            edKodeAkun.setText("");
                            edNamaAkun.setText("");
                        }                        
                    } else {
                        perkiraan = null;
                        AppUtils.setDefaultValues(edKode, edNama, edKodeAkun, edNamaAkun);
                    
                    }
                } catch (SQLException ex) {
                    AppUtils.showErrorDialog("Ada kesalahan load data dengan error :\n" + ex.getMessage());
                }
            }

        });
    }
    
    private void LoadDataJenisTransaksi(int currentPage) {
        try {
            tableModel.setRowCount(0); // Bersihkan tabel
            List<Map<String, Object>> result = jenisTransaksiDAO.getJenisTransaksiByPage(currentPage, edFilter.getText(), 20);
            for (Map<String, Object> row : result) {
                
                tableModel.addRow(new Object[]{
                    (Integer) row.get("id"),
                    (String) row.get("kode"),
                    (String) row.get("nama"),
                    (String) row.get("kode_akun"),
                    (String) row.get("nama_akun"),
                    (String) row.get("user_create")
                });
            }
            
            tblJenisTransaksi.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        } catch (SQLException ex) {
            AppUtils.showErrorDialog("Ada kesalahan ketika load daftar jenis transaksi dengan error:\n" + ex.getMessage());
        }
        
    }

    private void SetEnableKomponenInput(boolean enable) {
        edKode.setEnabled(enable);
        edNama.setEnabled(enable);
        edKodeAkun.setEnabled(enable);
        btnAkun.setEnabled(enable);
        edNamaAkun.setEnabled(enable);
    }

    private void InisialisasiTableJenisTransaksi() {
        tableModel = new DefaultTableModel(new String[]{"ID","Kode", "Nama", "Kode Akun", "Nama Akun"}, 0);
        tblJenisTransaksi.setModel(tableModel);
//        AppUtils.SetTableAligmentRight(tblJenisTransaksi, 7);
//        AppUtils.SetTableAligmentRight(tblJenisTransaksi, 8);
        tblJenisTransaksi.removeColumn(tblJenisTransaksi.getColumnModel().getColumn(0));
    }

    
}
