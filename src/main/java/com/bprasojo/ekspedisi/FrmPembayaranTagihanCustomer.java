/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.bprasojo.ekspedisi;

import com.bprasojo.ekspedisi.dao.BankDAO;
import com.bprasojo.ekspedisi.dao.PembayaranTagihanCustomerDAO;
import com.bprasojo.ekspedisi.dao.TagihanCustomerDAO;
import com.bprasojo.ekspedisi.model.Bank;
import com.bprasojo.ekspedisi.model.PembayaranTagihanCustomer;
import com.bprasojo.ekspedisi.model.TagihanCustomer;
import com.bprasojo.ekspedisi.model.User;
import com.bprasojo.ekspedisi.utils.AppUtils;
import com.bprasojo.ekspedisi.utils.CustomFocusTraversalPolicy;
import com.bprasojo.ekspedisi.utils.LookupForm;
import java.awt.event.ItemEvent;
import java.beans.PropertyVetoException;
import java.sql.SQLException;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;

/**
 *
 * @author USER
 */
public class FrmPembayaranTagihanCustomer extends javax.swing.JInternalFrame {

    /**
     * Creates new form FrmKasBonKaryawan
     */
    
    PembayaranTagihanCustomer pembayaranTagihanCustomer = null;
    PembayaranTagihanCustomerDAO pembayaranTagihanCustomerDAO = null;
    
//    Bank bank = null;    
    BankDAO bankDAO = null;
    
    TagihanCustomer tagihanCustomer = null;
    TagihanCustomerDAO tagihanCustomerDAO = null;
    
    private int currentPage = 1;
    private boolean SilakanLoadData = false;
    
    private DefaultTableModel tableModel;
    private boolean showLoopUpBank = false;
    private User user;
    
    public FrmPembayaranTagihanCustomer(User user) {
        this();
        this.user = user;
    
    }
    public FrmPembayaranTagihanCustomer() {
        initComponents();
        
        pnlInput.setFocusTraversalPolicy(new CustomFocusTraversalPolicy(edInvoice, btnInvoice, edTanggal, cbBank, edNominal, edPPHPersen, edPPH, edTotal, edKeterangan));

        try {
            setMaximum(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(FrmPembayaranTagihanCustomer.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        bankDAO = new BankDAO();
        pembayaranTagihanCustomerDAO = new PembayaranTagihanCustomerDAO();
        tagihanCustomerDAO = new TagihanCustomerDAO();
        
        AppUtils.SetTanggalAwalBulan(edTglAwal);
        AppUtils.SetTanggalToday(edTglAkhir);
        edFilter.setText("");
        
        LoadBank();
        InisialisasiTablePembayaranTagihanCustomer();
        
        SilakanLoadData = true;
        LoadDataPembayaranTagihanCustomer(currentPage);
        setStatusTombol("awal");
        
        
        inisialisasiEventTableModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        btnNew = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnSimpan = new javax.swing.JButton();
        btnBatal = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnCetak = new javax.swing.JButton();
        btnKeluar = new javax.swing.JButton();
        pnlInput = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        edNama = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        edTanggal = new com.toedter.calendar.JDateChooser();
        cbBank = new javax.swing.JComboBox<>();
        edNominal = new javax.swing.JFormattedTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        eNoRegister = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        edInvoice = new javax.swing.JTextField();
        btnInvoice = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        edSaldo = new javax.swing.JFormattedTextField();
        jLabel13 = new javax.swing.JLabel();
        edNilaiPekerjaan = new javax.swing.JFormattedTextField();
        jLabel14 = new javax.swing.JLabel();
        edPPN = new javax.swing.JFormattedTextField();
        jLabel15 = new javax.swing.JLabel();
        edPelunasan = new javax.swing.JFormattedTextField();
        jLabel16 = new javax.swing.JLabel();
        edPPHPersen = new javax.swing.JFormattedTextField();
        jLabel17 = new javax.swing.JLabel();
        edTotal = new javax.swing.JFormattedTextField();
        edPPH = new javax.swing.JFormattedTextField();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        edKeterangan = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        edAlamat = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        pnlFilter = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        edTglAwal = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        edTglAkhir = new com.toedter.calendar.JDateChooser();
        jLabel10 = new javax.swing.JLabel();
        edFilter = new javax.swing.JTextField();
        pnlNextPrev = new javax.swing.JPanel();
        btnPrev = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPembayaranKasBon = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Pembayaran Invoice Customer");

        jPanel1.setLayout(new java.awt.BorderLayout());

        jToolBar1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jToolBar1.setRollover(true);

        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Add32.png"))); // NOI18N
        btnNew.setText("Tambah");
        btnNew.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnNew.setFocusable(false);
        btnNew.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNew.setMaximumSize(new java.awt.Dimension(60, 70));
        btnNew.setMinimumSize(new java.awt.Dimension(60, 70));
        btnNew.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });
        jToolBar1.add(btnNew);

        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Edit32.png"))); // NOI18N
        btnEdit.setText("Edit");
        btnEdit.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnEdit.setFocusable(false);
        btnEdit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEdit.setMaximumSize(new java.awt.Dimension(60, 70));
        btnEdit.setMinimumSize(new java.awt.Dimension(60, 70));
        btnEdit.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        jToolBar1.add(btnEdit);

        btnSimpan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Save32.png"))); // NOI18N
        btnSimpan.setText("Simpan");
        btnSimpan.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnSimpan.setFocusable(false);
        btnSimpan.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSimpan.setMaximumSize(new java.awt.Dimension(60, 70));
        btnSimpan.setMinimumSize(new java.awt.Dimension(60, 70));
        btnSimpan.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });
        jToolBar1.add(btnSimpan);

        btnBatal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Undo32.png"))); // NOI18N
        btnBatal.setText("Batal");
        btnBatal.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnBatal.setFocusable(false);
        btnBatal.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnBatal.setMaximumSize(new java.awt.Dimension(60, 70));
        btnBatal.setMinimumSize(new java.awt.Dimension(60, 70));
        btnBatal.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBatalActionPerformed(evt);
            }
        });
        jToolBar1.add(btnBatal);

        btnHapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Delete32.png"))); // NOI18N
        btnHapus.setText("Hapus");
        btnHapus.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnHapus.setFocusable(false);
        btnHapus.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnHapus.setMaximumSize(new java.awt.Dimension(60, 70));
        btnHapus.setMinimumSize(new java.awt.Dimension(60, 70));
        btnHapus.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });
        jToolBar1.add(btnHapus);

        btnCetak.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Print.32.png"))); // NOI18N
        btnCetak.setText("Cetak");
        btnCetak.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnCetak.setFocusable(false);
        btnCetak.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCetak.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnCetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCetakActionPerformed(evt);
            }
        });
        jToolBar1.add(btnCetak);

        btnKeluar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Close32.png"))); // NOI18N
        btnKeluar.setText("Keluar");
        btnKeluar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnKeluar.setFocusable(false);
        btnKeluar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnKeluar.setMaximumSize(new java.awt.Dimension(60, 70));
        btnKeluar.setMinimumSize(new java.awt.Dimension(60, 70));
        btnKeluar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeluarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnKeluar);

        jPanel1.add(jToolBar1, java.awt.BorderLayout.NORTH);

        pnlInput.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pnlInput.setFocusCycleRoot(true);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("No Reguster");

        edNama.setEditable(false);
        edNama.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        edNama.setEnabled(false);
        edNama.setNextFocusableComponent(edAlamat);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Alamat");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Tanggal");

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Via Bank");

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Nominal Kas/Bank");

        cbBank.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbBankItemStateChanged(evt);
            }
        });
        cbBank.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbBankActionPerformed(evt);
            }
        });
        cbBank.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cbBankPropertyChange(evt);
            }
        });

        edNominal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        edNominal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        edNominal.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                edNominalPropertyChange(evt);
            }
        });

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Keterangan");

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Nama");

        eNoRegister.setEditable(false);
        eNoRegister.setText("Otomatis");
        eNoRegister.setEnabled(false);
        eNoRegister.setNextFocusableComponent(edAlamat);

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Invoice");

        edInvoice.setFocusCycleRoot(true);

        btnInvoice.setText("...");
        btnInvoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInvoiceActionPerformed(evt);
            }
        });

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Sisa Piutang");

        edSaldo.setEditable(false);
        edSaldo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));
        edSaldo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        edSaldo.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        edSaldo.setEnabled(false);

        jLabel13.setText("Nilai Pekerjaan");

        edNilaiPekerjaan.setEditable(false);
        edNilaiPekerjaan.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));
        edNilaiPekerjaan.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        edNilaiPekerjaan.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        edNilaiPekerjaan.setEnabled(false);

        jLabel14.setText("PPN");

        edPPN.setEditable(false);
        edPPN.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));
        edPPN.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        edPPN.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        edPPN.setEnabled(false);

        jLabel15.setText("Pelunasan");

        edPelunasan.setEditable(false);
        edPelunasan.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));
        edPelunasan.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        edPelunasan.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        edPelunasan.setEnabled(false);

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("PPH %");

        edPPHPersen.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        edPPHPersen.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel17.setText("Total");

        edTotal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        edTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        edPPH.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        edPPH.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        edPPH.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                edPPHPropertyChange(evt);
            }
        });

        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel18.setText("PPH Rp");

        edKeterangan.setLineWrap(true);
        jScrollPane3.setViewportView(edKeterangan);

        edAlamat.setLineWrap(true);
        edAlamat.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        edAlamat.setEnabled(false);
        jScrollPane2.setViewportView(edAlamat);

        javax.swing.GroupLayout pnlInputLayout = new javax.swing.GroupLayout(pnlInput);
        pnlInput.setLayout(pnlInputLayout);
        pnlInputLayout.setHorizontalGroup(
            pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInputLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlInputLayout.createSequentialGroup()
                        .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnlInputLayout.createSequentialGroup()
                                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(edPPN)
                                    .addComponent(eNoRegister)
                                    .addGroup(pnlInputLayout.createSequentialGroup()
                                        .addComponent(edInvoice, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnInvoice, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE))
                                    .addComponent(edNilaiPekerjaan)
                                    .addComponent(edPelunasan, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(pnlInputLayout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(edSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(pnlInputLayout.createSequentialGroup()
                        .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(edNama, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(6, 6, 6)
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(edNominal)
                        .addComponent(edTanggal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                        .addComponent(edPPHPersen)
                        .addComponent(edTotal)
                        .addComponent(edPPH))
                    .addComponent(cbBank, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3))
                .addContainerGap(200, Short.MAX_VALUE))
        );
        pnlInputLayout.setVerticalGroup(
            pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInputLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(edTanggal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(eNoRegister, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel6)))
                .addGap(6, 6, 6)
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInputLayout.createSequentialGroup()
                        .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(edInvoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnInvoice))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(edNilaiPekerjaan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(edPPN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(edPelunasan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(edSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(edNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlInputLayout.createSequentialGroup()
                        .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(cbBank, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(edNominal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(edPPHPersen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addGap(6, 6, 6)
                        .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(edPPH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(edTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlInputLayout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane3))))
                .addContainerGap())
        );

        jPanel1.add(pnlInput, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.NORTH);

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel3.setLayout(new java.awt.BorderLayout());

        jLabel1.setText("Periode");

        edTglAwal.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                edTglAwalPropertyChange(evt);
            }
        });

        jLabel2.setText("s.d.");

        edTglAkhir.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                edTglAkhirPropertyChange(evt);
            }
        });

        jLabel10.setText("Filter");

        edFilter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                edFilterKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout pnlFilterLayout = new javax.swing.GroupLayout(pnlFilter);
        pnlFilter.setLayout(pnlFilterLayout);
        pnlFilterLayout.setHorizontalGroup(
            pnlFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFilterLayout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(edTglAwal, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(12, 12, 12)
                .addComponent(edTglAkhir, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(edFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
        pnlFilterLayout.setVerticalGroup(
            pnlFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFilterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(pnlFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10)
                        .addComponent(edFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(edTglAkhir, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(edTglAwal, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10))
        );

        jPanel3.add(pnlFilter, java.awt.BorderLayout.NORTH);

        pnlNextPrev.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnPrev.setText("<< Prev");
        btnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevActionPerformed(evt);
            }
        });

        btnNext.setText("Next >>");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlNextPrevLayout = new javax.swing.GroupLayout(pnlNextPrev);
        pnlNextPrev.setLayout(pnlNextPrevLayout);
        pnlNextPrevLayout.setHorizontalGroup(
            pnlNextPrevLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlNextPrevLayout.createSequentialGroup()
                .addContainerGap(592, Short.MAX_VALUE)
                .addComponent(btnPrev)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNext)
                .addContainerGap())
        );
        pnlNextPrevLayout.setVerticalGroup(
            pnlNextPrevLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlNextPrevLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlNextPrevLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNext)
                    .addComponent(btnPrev))
                .addContainerGap())
        );

        jPanel3.add(pnlNextPrev, java.awt.BorderLayout.PAGE_END);

        tblPembayaranKasBon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblPembayaranKasBon.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tblPembayaranKasBonFocusGained(evt);
            }
        });
        jScrollPane1.setViewportView(tblPembayaranKasBon);

        jPanel3.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel3, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        LoadDataPembayaranTagihanCustomer(currentPage);
        
        pembayaranTagihanCustomer = new PembayaranTagihanCustomer();
        tagihanCustomer = null;
//        bank = null;
        
        AppUtils.setDefaultValues(edInvoice, 
                                    edNilaiPekerjaan, 
                                    edPPN, 
                                    edPelunasan, 
                                    edSaldo, 
                                    edNama, 
                                    edAlamat, 
                                    edSaldo,
                                    edTanggal,
                                    edNominal,
                                    edKeterangan,
                                    cbBank,
                                    edPPH,
                                    edPPHPersen,
                                    edTotal);  
        
        
        showLoopUpBank = true;
        
        setStatusTombol("tambah");
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        setStatusTombol("edit");
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        if (validasiInput() == false){
            return;
        }

        try {
            pembayaranTagihanCustomer.setTagihanCustomerId(tagihanCustomer.getId());
            pembayaranTagihanCustomer.setSumberDana(cbBank.getSelectedItem().toString());
            pembayaranTagihanCustomer.setTanggal(edTanggal.getDate());
            
            Bank selectedBank = (Bank) cbBank.getSelectedItem();
            pembayaranTagihanCustomer.setBankId(selectedBank.getId());
            pembayaranTagihanCustomer.setPerkiraanKasId(selectedBank.getAkun().getId());            
            
            pembayaranTagihanCustomer.setNominalKas(((Number)edNominal.getValue()).intValue());
            pembayaranTagihanCustomer.setPphPersen(((Number)edPPHPersen.getValue()).intValue());
            pembayaranTagihanCustomer.setPph(((Number)edPPH.getValue()).intValue());
            pembayaranTagihanCustomer.setKeterangan(edKeterangan.getText());            
            
            String terbilang = AppUtils.terbilang(pembayaranTagihanCustomer.getNominalKas()) + " Rupiah";
            pembayaranTagihanCustomer.setTerbilang(terbilang);
            
            pembayaranTagihanCustomer.setUserCreate(user.getUsername());
            pembayaranTagihanCustomer.setUserUpdate(user.getUsername());
            pembayaranTagihanCustomerDAO.save(pembayaranTagihanCustomer);

            AppUtils.showInfoDialog("Data berhasil disimpan dengan no register : " + pembayaranTagihanCustomer.getNoRegister());
            LoadDataPembayaranTagihanCustomer(currentPage);

        } catch (SQLException ex) {
            AppUtils.showErrorDialog("Gagal menyimpan data dengan error " + ex.getMessage());
        }
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBatalActionPerformed
        setStatusTombol("awal");
    }//GEN-LAST:event_btnBatalActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        boolean userConfirmed = AppUtils.showConfirmDialog("Apakah Anda yakin akan menghapus data?");

        if (userConfirmed) {
            try {
                pembayaranTagihanCustomerDAO.delete(pembayaranTagihanCustomer.getId());
                setStatusTombol("awal");
                LoadDataPembayaranTagihanCustomer(currentPage);
            } catch (SQLException ex) {
                AppUtils.showErrorDialog("Gagal menghapus data dengan error: \n" + ex.getMessage());
            }
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeluarActionPerformed
        dispose();
    }//GEN-LAST:event_btnKeluarActionPerformed

    private void edTglAwalPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_edTglAwalPropertyChange
        if (SilakanLoadData){
            currentPage = 1;
            LoadDataPembayaranTagihanCustomer(currentPage);
        }
    }//GEN-LAST:event_edTglAwalPropertyChange

    private void edTglAkhirPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_edTglAkhirPropertyChange
        if (SilakanLoadData){
            currentPage = 1;
            LoadDataPembayaranTagihanCustomer(currentPage);
        }
    }//GEN-LAST:event_edTglAkhirPropertyChange

    private void edFilterKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_edFilterKeyReleased
        if (SilakanLoadData){
            currentPage = 1;
            LoadDataPembayaranTagihanCustomer(currentPage);
        }
    }//GEN-LAST:event_edFilterKeyReleased

    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        if (currentPage > 1) {
            currentPage--;
            LoadDataPembayaranTagihanCustomer(currentPage);
        }
    }//GEN-LAST:event_btnPrevActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        currentPage++;
        LoadDataPembayaranTagihanCustomer(currentPage);
    }//GEN-LAST:event_btnNextActionPerformed

    private void tblPembayaranKasBonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblPembayaranKasBonFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_tblPembayaranKasBonFocusGained

    private void btnInvoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInvoiceActionPerformed
        String sqlQuery = "select a.no_invoice, a.tanggal,  b.nama, b.alamat, a.pekerjaan,"
        + " a.nilai_pekerjaan, a.ppn, a.total, a.pelunasan, (a.total - a.pelunasan) as Sisa "
        + " from tagihan_customer a "
        + " inner join stake_holder b on a.customer_id = b.id "
        + " where a.status_lunas = 'Belum' ";

        LookupForm lookupForm = new LookupForm(this, sqlQuery, true);
        Map<String, Object> selectedRecord = lookupForm.getSelectedRecord();
        if (selectedRecord != null) {
            LoadInvoice(selectedRecord.get("no_invoice").toString());

        }
    }//GEN-LAST:event_btnInvoiceActionPerformed

    private void cbBankPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cbBankPropertyChange

    }//GEN-LAST:event_cbBankPropertyChange

    private void cbBankItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbBankItemStateChanged
//        if (evt.getStateChange() == ItemEvent.SELECTED && showLoopUpBank){
//            if (cbBank.getSelectedIndex() <= 0){
//                bank = null;
//                lblBank.setText("");
//            } else {
//                String sqlQuery = "select no_rekening, nama_bank, atas_nama from bank";
//                LookupForm lookupForm = new LookupForm(this, sqlQuery, true);
//                Map<String, Object> selectedRecord = lookupForm.getSelectedRecord();
//                if (selectedRecord != null) {
//                    try {
//                        // Mengambil nilai dengan nama kolom
//                        String no_rekening = selectedRecord.get("no_rekening").toString();
//                        bank = bankDAO.getBankByNoRekening(no_rekening);
//
//                        if (bank != null){
//                            lblBank.setText(bank.toString());
//                        } else {
//                            lblBank.setText("");
//                        }
//                    } catch (SQLException ex) {
//                        Logger.getLogger(FrmTransaksiBank.class.getName()).log(Level.SEVERE, null, ex);
//                    }
//
//                } else {
//                    JOptionPane.showMessageDialog(this, "Tidak ada data yang dipilih.");
//                }
//            }
//        }
    }//GEN-LAST:event_cbBankItemStateChanged

    private void cbBankActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbBankActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbBankActionPerformed

    private void edNominalPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_edNominalPropertyChange
        hitungTotal();
    }//GEN-LAST:event_edNominalPropertyChange

    private void edPPHPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_edPPHPropertyChange
        hitungTotal();
    }//GEN-LAST:event_edPPHPropertyChange

    private void btnCetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCetakActionPerformed
        String reportPath = "src/main/java/com/bprasojo/ekspedisi/reports/Kwitansi.jasper";

        try {
            Map<String, Object> params = new HashMap<>();
            params.put("p_no_register", pembayaranTagihanCustomer.getNoRegister());
            AppUtils.showReport(reportPath, params);
        } catch (JRException ex) {
            AppUtils.showErrorDialog("Ada kesalahan dengan error \n" + ex.getMessage());
        }
    }//GEN-LAST:event_btnCetakActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBatal;
    private javax.swing.JButton btnCetak;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnInvoice;
    private javax.swing.JButton btnKeluar;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrev;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JComboBox<Bank> cbBank;
    private javax.swing.JTextField eNoRegister;
    private javax.swing.JTextArea edAlamat;
    private javax.swing.JTextField edFilter;
    private javax.swing.JTextField edInvoice;
    private javax.swing.JTextArea edKeterangan;
    private javax.swing.JTextField edNama;
    private javax.swing.JFormattedTextField edNilaiPekerjaan;
    private javax.swing.JFormattedTextField edNominal;
    private javax.swing.JFormattedTextField edPPH;
    private javax.swing.JFormattedTextField edPPHPersen;
    private javax.swing.JFormattedTextField edPPN;
    private javax.swing.JFormattedTextField edPelunasan;
    private javax.swing.JFormattedTextField edSaldo;
    private com.toedter.calendar.JDateChooser edTanggal;
    private com.toedter.calendar.JDateChooser edTglAkhir;
    private com.toedter.calendar.JDateChooser edTglAwal;
    private javax.swing.JFormattedTextField edTotal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JPanel pnlFilter;
    private javax.swing.JPanel pnlInput;
    private javax.swing.JPanel pnlNextPrev;
    private javax.swing.JTable tblPembayaranKasBon;
    // End of variables declaration//GEN-END:variables

    private void setStatusTombol(String mode){
        if (mode == "awal"){
            btnNew.setEnabled(true);
            btnEdit.setEnabled(false);
            btnSimpan.setEnabled(false);
            btnBatal.setEnabled(false);
            btnHapus.setEnabled(false);
            btnCetak.setEnabled(false);
            
            SetEnableKomponenInput(false);
        } else if (mode == "tambah"){
            btnNew.setEnabled(false);
            btnEdit.setEnabled(false);
            btnSimpan.setEnabled(true);
            btnBatal.setEnabled(true);
            btnHapus.setEnabled(false);
            btnCetak.setEnabled(false);
            
            SetEnableKomponenInput(true);
        } else if (mode == "edit"){
            btnNew.setEnabled(false);
            btnEdit.setEnabled(false);
            btnSimpan.setEnabled(true);
            btnBatal.setEnabled(true);
            btnHapus.setEnabled(true);
            btnCetak.setEnabled(true);
            
            SetEnableKomponenInput(true);
        } else if (mode == "selected"){
            btnNew.setEnabled(true);
            btnEdit.setEnabled(true);
            btnSimpan.setEnabled(false);
            btnBatal.setEnabled(false);
            btnHapus.setEnabled(true);
            btnCetak.setEnabled(true);
            
            SetEnableKomponenInput(false);
        }
    }

    private boolean validasiInput() {
        if (tagihanCustomer == null){
            AppUtils.showWarningDialog("Invoice belum dipilih");
            btnInvoice.requestFocus();
            return false;
        }
        
        if (cbBank.getSelectedIndex() < 0){
            AppUtils.showWarningDialog("Bank belum dipilih");
            cbBank.requestFocus();
            return false;
        }
        
        if (edNominal.getValue() == null || ((Number) edNominal.getValue()).intValue() <= 0){
            AppUtils.showWarningDialog("Nominal belum diisi");
            edNominal.requestFocus();
            return false;
        }
        
        int saldo = ((Number) edSaldo.getValue()).intValue();
        int pembayaran = ((Number) edNominal.getValue()).intValue();
        if (saldo < pembayaran){
            AppUtils.showWarningDialog("Pembayaran melebihi saldo hutang");
            edNominal.requestFocus();
            return false;
        }
        
        
        return true;
        
    }
    
    private void inisialisasiEventTableModel() {
        tblPembayaranKasBon.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                // Memeriksa apakah ada baris yang dipilih
                if (!e.getValueIsAdjusting()) {
                    int selectedRow = tblPembayaranKasBon.getSelectedRow(); // Mendapatkan baris yang dipilih
                    if (selectedRow != -1) {
                        Integer id = (Integer) tblPembayaranKasBon.getModel().getValueAt(selectedRow, 0);
                        LoadPembayaranTagihanCustomer(id);
                        setStatusTombol("selected");
                    }
                }
            }

            private void LoadPembayaranTagihanCustomer(Integer id) {
                try {
                    pembayaranTagihanCustomer = pembayaranTagihanCustomerDAO.getById(id);
                    if (pembayaranTagihanCustomer != null){
                        tagihanCustomer = tagihanCustomerDAO.getById(pembayaranTagihanCustomer.getTagihanCustomerId());
                        eNoRegister.setText(pembayaranTagihanCustomer.getNoRegister());
                        
                        LoadInvoice(pembayaranTagihanCustomer.getTagihanCustomer().getNoInvoice());
                        
                        edTanggal.setDate(pembayaranTagihanCustomer.getTanggal());
                        
                        if (pembayaranTagihanCustomer.getBankId() > 0){
                            AppUtils.setSelectedIndexById(cbBank, pembayaranTagihanCustomer.getBankId());
                        } else {
                          cbBank.setSelectedIndex(-1);
                        }
                        
                        edNominal.setValue(pembayaranTagihanCustomer.getNominalKas());
                        edPPHPersen.setValue(pembayaranTagihanCustomer.getPphPersen());
                        edPPH.setValue(pembayaranTagihanCustomer.getPph());
                        hitungTotal();
                        
                        edKeterangan.setText(pembayaranTagihanCustomer.getKeterangan());
                        
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(FrmPembayaranTagihanCustomer.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    
    private void LoadDataPembayaranTagihanCustomer(int currentPage) {
        tableModel.setRowCount(0); // Bersihkan tabel
        
        List<Map<String, Object>> result = pembayaranTagihanCustomerDAO.getPembayaranTagihanCustomerByPage(currentPage, edTglAwal.getDate(), edTglAkhir.getDate(), edFilter.getText());
        for (Map<String, Object> row : result) {
            int nominal_kas = (Integer) row.get("nominal_kas");
            int pph = (Integer) row.get("pph");
            int pph_persen = (Integer) row.get("pph_persen");
            int pembayaran = nominal_kas + pph;
            tableModel.addRow(new Object[]{
                        (Integer) row.get("id"),
                        (String) row.get("no_register"),
                        (String) row.get("no_invoice"),    
                        (String) row.get("nama"),
                        (String) row.get("alamat"),
                        AppUtils.DateFormatShort((Date) row.get("tanggal")),
                        (String) row.get("sumber_dana"),
                        AppUtils.NumericFormat(nominal_kas),
                        AppUtils.NumericFormat(pph_persen),
                        AppUtils.NumericFormat(pph),                        
                        AppUtils.NumericFormat(pembayaran),
                        (String) row.get("keterangan"),
                        (String) row.get("user_create")
                });
        }
        
        tblPembayaranKasBon.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        
    }

    private void SetEnableKomponenInput(boolean enable) {
        edInvoice.setEnabled(enable);
        btnInvoice.setEnabled(enable);
        
        edPPH.setEnabled(enable);
        edPPHPersen.setEnabled(enable);
        edTotal.setEnabled(enable);
        edTanggal.setEnabled(enable);
        cbBank.setEnabled(enable);
        edNominal.setEnabled(enable);
        edKeterangan.setEnabled(enable);
    }

    private void InisialisasiTablePembayaranTagihanCustomer() {
        tableModel = new DefaultTableModel(new String[]{"ID","No Register", "No Invoice", "Nama", "Alamat", "Tanggal", "Suber Dana","Nominal Kas/Bank","PPH Persen","PPH","Total", "Keterangan",  "Pc"}, 0);
        tblPembayaranKasBon.setModel(tableModel);
        AppUtils.SetTableAligmentRight(tblPembayaranKasBon, 7);
        AppUtils.SetTableAligmentRight(tblPembayaranKasBon, 8);
        AppUtils.SetTableAligmentRight(tblPembayaranKasBon, 9);
        AppUtils.SetTableAligmentRight(tblPembayaranKasBon, 10);
        
        tblPembayaranKasBon.removeColumn(tblPembayaranKasBon.getColumnModel().getColumn(0));
        
    }

    private void LoadInvoice(String noInvoice) {
        try {
            tagihanCustomer = tagihanCustomerDAO.getByNoInvoice(noInvoice);

            if (tagihanCustomer != null){
                edInvoice.setText(tagihanCustomer.getNoInvoice());
                edNilaiPekerjaan.setValue(tagihanCustomer.getNilaiPekerjaan());
                edPPN.setValue(tagihanCustomer.getPpn());
                
                if (pembayaranTagihanCustomer.getTagihanCustomer() != null && tagihanCustomer.getNoInvoice().equals(pembayaranTagihanCustomer.getTagihanCustomer().getNoInvoice())){
                    edPelunasan.setValue(tagihanCustomer.getPelunasan()- pembayaranTagihanCustomer.getTotal());
                    edSaldo.setValue(tagihanCustomer.getSaldo() + pembayaranTagihanCustomer.getTotal());
                } else {
                    edPelunasan.setValue(tagihanCustomer.getPelunasan());
                    edSaldo.setValue(tagihanCustomer.getSaldo());
                }
                
                edNama.setText(tagihanCustomer.getCustomer().getNama());
                edAlamat.setText(tagihanCustomer.getCustomer().getAlamat());
            } else {
                AppUtils.setDefaultValues(edInvoice, 
                                          edNilaiPekerjaan, 
                                          edPPN, 
                                          edPelunasan, 
                                          edSaldo, 
                                          edNama, 
                                          edAlamat, 
                                          edSaldo);                
            }
        } catch (SQLException ex) {
            AppUtils.showWarningDialog("Ada kesalahan load data Invoice dengan error \n" + ex.getMessage());
        }
    }

    private void hitungTotal() {
      int nominalKas = 0;
      int pph = 0;
      
      if (edNominal.getValue() != null)
        nominalKas = ((Number)edNominal.getValue()).intValue();
      
      if (edPPH.getValue() != null)
        pph = ((Number)edPPH.getValue()).intValue();
      
      edTotal.setValue(nominalKas + pph);
    }
    
    private void LoadBank() {
        try {
            List<Bank> banks = bankDAO.getAllBank();
            
            // Masukkan data ke JComboBox
            DefaultComboBoxModel<Bank> model = new DefaultComboBoxModel<>();
            for (Bank b : banks) {
                model.addElement(b); // Menambahkan objek Perkiraan ke model
            }
            cbBank.setModel(model);
        } catch (SQLException ex) {
            AppUtils.showWarningDialog("Gagal load bank dengan error : \n" + ex.getMessage());
        }
    }
}
