/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.bprasojo.ekspedisi;

import com.bprasojo.ekspedisi.dao.ArmadaDAO;
import com.bprasojo.ekspedisi.dao.BankDAO;
import com.bprasojo.ekspedisi.dao.ConfigDAO;
import com.bprasojo.ekspedisi.dao.PerkiraanDAO;
import com.bprasojo.ekspedisi.dao.TransaksiKasDAO;
import com.bprasojo.ekspedisi.model.Armada;
import com.bprasojo.ekspedisi.model.Bank;
import com.bprasojo.ekspedisi.model.Perkiraan;
import com.bprasojo.ekspedisi.model.TransaksiKas;
import com.bprasojo.ekspedisi.model.User;
import com.bprasojo.ekspedisi.utils.AppUtils;
import com.bprasojo.ekspedisi.utils.CustomFocusTraversalPolicy;
import com.bprasojo.ekspedisi.utils.LookupForm;
import java.beans.PropertyVetoException;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 */
public class FrmTransaksiKas extends javax.swing.JInternalFrame {

    /**
     * Creates new form FrmTransaksiKas
     */
    
    private Perkiraan perkiraanTransaksi = null;
    private TransaksiKas transaksiKas = null;
    
            
    private final ConfigDAO configDAO = new ConfigDAO();
    private final PerkiraanDAO perkiraanDAO = new PerkiraanDAO();
    private final ArmadaDAO armadaDAO = new ArmadaDAO();
    private final BankDAO bankDAO = new BankDAO();
    private final TransaksiKasDAO transaksiKasDAO = new TransaksiKasDAO();
    
    private DefaultTableModel tableModel;
            
    
    private int currentPage = 1;
    private boolean SilakanLoadData = false;
    private User user;
    
    public FrmTransaksiKas(User user) {
        this();
        this.user = user;
    }
    public FrmTransaksiKas() {
        initComponents();
        
        
        try {
            setMaximum(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(FrmTransaksiKas.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        LoadBank();
        LoadArmada();
        
        AppUtils.SetTanggalAwalBulan(edTglAwal);
        AppUtils.SetTanggalToday(edTglAkhir);        
        edFilter.setText("");
        
        InisialisasitblTransaksiKas();
        
        SilakanLoadData = true;
        LoadDataTransaksiKas(currentPage);
        btnNewActionPerformed(null);
        
        setStatusTombol("awal");
        inisialisasiEventTableModel();
        
        pnlInput.setFocusTraversalPolicy(new CustomFocusTraversalPolicy(edNamaAkun, btnAkunTransaksi, cbBank, cbArmada, btnHapusArmada, edTanggal, edUangKeluar, edUangMasuk, edKeterangan));;
        
    }
    // </editor-fold>

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        btnNew = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnSimpan = new javax.swing.JButton();
        btnBatal = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnKeluar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        pnlInput = new javax.swing.JPanel();
        edNamaAkun = new javax.swing.JTextField();
        cbBank = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        edKeterangan = new javax.swing.JTextField();
        edTanggal = new com.toedter.calendar.JDateChooser();
        edUangMasuk = new javax.swing.JFormattedTextField();
        edUangKeluar = new javax.swing.JFormattedTextField();
        btnAkunTransaksi = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        cbArmada = new javax.swing.JComboBox<>();
        btnHapusArmada = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        pnlNextPrev = new javax.swing.JPanel();
        btnPrev = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        pnlFilter = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        edTglAwal = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        edTglAkhir = new com.toedter.calendar.JDateChooser();
        jLabel10 = new javax.swing.JLabel();
        edFilter = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTransaksiKas = new javax.swing.JTable();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Transaksi Kas");
        setMaximumSize(new java.awt.Dimension(104, 104));

        jToolBar1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jToolBar1.setRollover(true);

        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Add32.png"))); // NOI18N
        btnNew.setText("Tambah");
        btnNew.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnNew.setFocusable(false);
        btnNew.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNew.setMaximumSize(new java.awt.Dimension(60, 70));
        btnNew.setMinimumSize(new java.awt.Dimension(60, 70));
        btnNew.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });
        jToolBar1.add(btnNew);

        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Edit32.png"))); // NOI18N
        btnEdit.setText("Edit");
        btnEdit.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnEdit.setFocusable(false);
        btnEdit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEdit.setMaximumSize(new java.awt.Dimension(60, 70));
        btnEdit.setMinimumSize(new java.awt.Dimension(60, 70));
        btnEdit.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        jToolBar1.add(btnEdit);

        btnSimpan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Save32.png"))); // NOI18N
        btnSimpan.setText("Simpan");
        btnSimpan.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnSimpan.setFocusable(false);
        btnSimpan.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSimpan.setMaximumSize(new java.awt.Dimension(60, 70));
        btnSimpan.setMinimumSize(new java.awt.Dimension(60, 70));
        btnSimpan.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });
        jToolBar1.add(btnSimpan);

        btnBatal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Undo32.png"))); // NOI18N
        btnBatal.setText("Batal");
        btnBatal.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnBatal.setFocusable(false);
        btnBatal.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnBatal.setMaximumSize(new java.awt.Dimension(60, 70));
        btnBatal.setMinimumSize(new java.awt.Dimension(60, 70));
        btnBatal.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBatalActionPerformed(evt);
            }
        });
        jToolBar1.add(btnBatal);

        btnHapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Delete32.png"))); // NOI18N
        btnHapus.setText("Hapus");
        btnHapus.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnHapus.setFocusable(false);
        btnHapus.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnHapus.setMaximumSize(new java.awt.Dimension(60, 70));
        btnHapus.setMinimumSize(new java.awt.Dimension(60, 70));
        btnHapus.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });
        jToolBar1.add(btnHapus);

        btnKeluar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Close32.png"))); // NOI18N
        btnKeluar.setText("Keluar");
        btnKeluar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnKeluar.setFocusable(false);
        btnKeluar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnKeluar.setMaximumSize(new java.awt.Dimension(60, 70));
        btnKeluar.setMinimumSize(new java.awt.Dimension(60, 70));
        btnKeluar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeluarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnKeluar);

        getContentPane().add(jToolBar1, java.awt.BorderLayout.PAGE_START);

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setLayout(new java.awt.BorderLayout());

        pnlInput.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pnlInput.setFocusCycleRoot(true);

        edNamaAkun.setText("jTextField1");
        edNamaAkun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edNamaAkunActionPerformed(evt);
            }
        });

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Akun Biaya / Pendapatan");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Untuk Armada");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Uang Keluar");

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Uang Masuk");

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Keterangan");

        edKeterangan.setText("jTextField3");

        edUangMasuk.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));

        edUangKeluar.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));

        btnAkunTransaksi.setText("...");
        btnAkunTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAkunTransaksiActionPerformed(evt);
            }
        });

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Kas/Bank");

        btnHapusArmada.setText("Hapus");
        btnHapusArmada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusArmadaActionPerformed(evt);
            }
        });

        jLabel11.setText("Tanggal");

        javax.swing.GroupLayout pnlInputLayout = new javax.swing.GroupLayout(pnlInput);
        pnlInput.setLayout(pnlInputLayout);
        pnlInputLayout.setHorizontalGroup(
            pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInputLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel11)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlInputLayout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInputLayout.createSequentialGroup()
                        .addComponent(edNamaAkun, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAkunTransaksi))
                    .addComponent(edTanggal, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlInputLayout.createSequentialGroup()
                            .addComponent(edUangKeluar, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(edUangMasuk, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(edKeterangan, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(pnlInputLayout.createSequentialGroup()
                            .addComponent(cbArmada, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnHapusArmada, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(cbBank, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        pnlInputLayout.setVerticalGroup(
            pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInputLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(edNamaAkun, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAkunTransaksi)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(cbBank, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(cbArmada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHapusArmada)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(edTanggal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(edUangKeluar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(edUangMasuk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(edKeterangan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(pnlInput, java.awt.BorderLayout.NORTH);

        pnlNextPrev.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnPrev.setText("<< Prev");
        btnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevActionPerformed(evt);
            }
        });

        btnNext.setText("Next >>");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlNextPrevLayout = new javax.swing.GroupLayout(pnlNextPrev);
        pnlNextPrev.setLayout(pnlNextPrevLayout);
        pnlNextPrevLayout.setHorizontalGroup(
            pnlNextPrevLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlNextPrevLayout.createSequentialGroup()
                .addContainerGap(541, Short.MAX_VALUE)
                .addComponent(btnPrev)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNext)
                .addContainerGap())
        );
        pnlNextPrevLayout.setVerticalGroup(
            pnlNextPrevLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlNextPrevLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlNextPrevLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNext)
                    .addComponent(btnPrev))
                .addContainerGap())
        );

        jPanel1.add(pnlNextPrev, java.awt.BorderLayout.PAGE_END);

        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel4.setLayout(new java.awt.BorderLayout());

        jLabel1.setText("Periode");

        edTglAwal.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                edTglAwalPropertyChange(evt);
            }
        });

        jLabel2.setText("s.d.");

        edTglAkhir.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                edTglAkhirPropertyChange(evt);
            }
        });

        jLabel10.setText("Filter");

        edFilter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                edFilterKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout pnlFilterLayout = new javax.swing.GroupLayout(pnlFilter);
        pnlFilter.setLayout(pnlFilterLayout);
        pnlFilterLayout.setHorizontalGroup(
            pnlFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFilterLayout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(edTglAwal, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(12, 12, 12)
                .addComponent(edTglAkhir, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(edFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
        pnlFilterLayout.setVerticalGroup(
            pnlFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFilterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(pnlFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10)
                        .addComponent(edFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(edTglAkhir, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(edTglAwal, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10))
        );

        jPanel4.add(pnlFilter, java.awt.BorderLayout.NORTH);

        tblTransaksiKas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblTransaksiKas.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tblTransaksiKasFocusGained(evt);
            }
        });
        jScrollPane1.setViewportView(tblTransaksiKas);

        jPanel4.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel4, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        LoadDataTransaksiKas(currentPage);
                
        transaksiKas = new TransaksiKas();
            
        perkiraanTransaksi = null;
        cbBank.setSelectedIndex(-1);
        
        cbArmada.setSelectedIndex(-1);
        
        
        edNamaAkun.setText("");
        
        Calendar calendar = Calendar.getInstance();
        Date today = calendar.getTime(); // Mendapatkan tanggal dalam format Date
        
        edTanggal.setDate(today);        
        edUangMasuk.setText("0");
        edUangKeluar.setText("0");
        edKeterangan.setText("");
        
        setStatusTombol("tambah");
        
//        edt
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        if (validasiInput() == false){
            return;
        }
        
        try {
            transaksiKas.setAkunTransaksiId(perkiraanTransaksi.getId());            
            
            if (cbBank.getSelectedIndex() >= 0){
                Bank selectedBank = (Bank) cbBank.getSelectedItem();
                transaksiKas.setBankId(selectedBank.getId());
                transaksiKas.setAkunKasId(selectedBank.getAkun().getId());
            } else {
                transaksiKas.setBankId(0);
                
                int AkunKasId = Integer.parseInt(configDAO.getByKode("KAS_ID").getNilai());
                transaksiKas.setAkunKasId(AkunKasId);
            }
            
            if (cbArmada.getSelectedIndex() >= 0){
                Armada selectedArmada = (Armada) cbArmada.getSelectedItem();
                transaksiKas.setArmadaId(selectedArmada.getId());
            } else {            
                transaksiKas.setArmadaId(0);
            }
            
            Integer nominalMasuk = 0;
            if (edUangMasuk.getValue() != null){
                nominalMasuk = ((Number) edUangMasuk.getValue()).intValue();
            }
            
            Integer nominalKeluar = 0;
            if (edUangKeluar.getValue() != null){
                nominalKeluar = ((Number) edUangKeluar.getValue()).intValue();
            }
            
            
            transaksiKas.setNominalMasuk(nominalMasuk);
            transaksiKas.setNominalKeluar(nominalKeluar);
            
            transaksiKas.setKeterangan(edKeterangan.getText());
            transaksiKas.setTanggal(edTanggal.getDate());
            transaksiKas.setUserCreate(user.getUsername());
            transaksiKas.setUserUpdate(user.getUsername());
            
            transaksiKasDAO.save(transaksiKas);
            
            AppUtils.showInfoDialog("Data berhasil disimpan!");
            LoadDataTransaksiKas(currentPage);
            
            setStatusTombol("selected");
            

        } catch (SQLException ex) {
            AppUtils.showErrorDialog("Ada kesalahan dengan error :\n" + ex.getMessage());
        }
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void edNamaAkunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edNamaAkunActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_edNamaAkunActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        setStatusTombol("edit");
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnAkunTransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAkunTransaksiActionPerformed
        String sqlQuery = "SELECT " +
                            " concat(REPEAT(' ', level * 4), kode) as kode_akun, " +
                            " concat(REPEAT(' ', level * 4), nama) as nama_akun " +
                            " FROM perkiraan " +
                            " ORDER BY kode";
        
        LookupForm lookupForm = new LookupForm(this, sqlQuery, true);
        Map<String, Object> selectedRecord = lookupForm.getSelectedRecord();
        if (selectedRecord != null) {
            try {
                // Mengambil nilai dengan nama kolom
                String kode = selectedRecord.get("kode_akun").toString().trim();
                perkiraanTransaksi = perkiraanDAO.getPerkiraanByKode(kode);
                String akun = perkiraanTransaksi.getKode() + "-" + perkiraanTransaksi.getNama();
                edNamaAkun.setText(akun);
            } catch (SQLException ex) {
                Logger.getLogger(FrmTransaksiKas.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        } else {
            JOptionPane.showMessageDialog(this, "Tidak ada data yang dipilih.");
        }
    }//GEN-LAST:event_btnAkunTransaksiActionPerformed

    private void btnHapusArmadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusArmadaActionPerformed
        cbArmada.setSelectedIndex(-1);
    }//GEN-LAST:event_btnHapusArmadaActionPerformed

    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        if (currentPage > 1) {
            currentPage--;
            LoadDataTransaksiKas(currentPage);
        }
    }//GEN-LAST:event_btnPrevActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        currentPage++;
        LoadDataTransaksiKas(currentPage);
    }//GEN-LAST:event_btnNextActionPerformed

    private void edFilterKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_edFilterKeyReleased
        if (SilakanLoadData){
            currentPage = 1;
            LoadDataTransaksiKas(currentPage);
        }
    }//GEN-LAST:event_edFilterKeyReleased

    private void edTglAwalPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_edTglAwalPropertyChange
        if (SilakanLoadData){
            currentPage = 1;
            LoadDataTransaksiKas(currentPage);
        }
    }//GEN-LAST:event_edTglAwalPropertyChange

    private void edTglAkhirPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_edTglAkhirPropertyChange
        if (SilakanLoadData){
            currentPage = 1;
            LoadDataTransaksiKas(currentPage);
        }
    }//GEN-LAST:event_edTglAkhirPropertyChange

    private void btnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeluarActionPerformed
        dispose();
    }//GEN-LAST:event_btnKeluarActionPerformed

    private void btnBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBatalActionPerformed
        setStatusTombol("awal");
    }//GEN-LAST:event_btnBatalActionPerformed

    private void tblTransaksiKasFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblTransaksiKasFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_tblTransaksiKasFocusGained

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        boolean userConfirmed = AppUtils.showConfirmDialog("Apakah Anda yakin akan menghapus data?");
        
        if (userConfirmed) {
            try {
                transaksiKasDAO.delete(transaksiKas.getId());
                setStatusTombol("awal");
                LoadDataTransaksiKas(currentPage);
            } catch (SQLException ex) {
                AppUtils.showErrorDialog("Ada kesalahan dengan error : \n" + ex.getMessage());
            }
        }
    }//GEN-LAST:event_btnHapusActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAkunTransaksi;
    private javax.swing.JButton btnBatal;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnHapusArmada;
    private javax.swing.JButton btnKeluar;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrev;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JComboBox<Armada> cbArmada;
    private javax.swing.JComboBox<Bank> cbBank;
    private javax.swing.JTextField edFilter;
    private javax.swing.JTextField edKeterangan;
    private javax.swing.JTextField edNamaAkun;
    private com.toedter.calendar.JDateChooser edTanggal;
    private com.toedter.calendar.JDateChooser edTglAkhir;
    private com.toedter.calendar.JDateChooser edTglAwal;
    private javax.swing.JFormattedTextField edUangKeluar;
    private javax.swing.JFormattedTextField edUangMasuk;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JPanel pnlFilter;
    private javax.swing.JPanel pnlInput;
    private javax.swing.JPanel pnlNextPrev;
    private javax.swing.JTable tblTransaksiKas;
    // End of variables declaration//GEN-END:variables

    private void setStatusTombol(String mode){
        if (mode == "awal"){
            btnNew.setEnabled(true);
            btnEdit.setEnabled(false);
            btnSimpan.setEnabled(false);
            btnBatal.setEnabled(false);
            btnHapus.setEnabled(false);
            pnlInput.setEnabled(false);
            
            SetEnableKomponenInput(false);
        } else if (mode == "tambah"){
            btnNew.setEnabled(false);
            btnEdit.setEnabled(false);
            btnSimpan.setEnabled(true);
            btnBatal.setEnabled(true);
            btnHapus.setEnabled(false);
            pnlInput.setEnabled(true);
            
            SetEnableKomponenInput(true);
        } else if (mode == "edit"){
            btnNew.setEnabled(false);
            btnEdit.setEnabled(false);
            btnSimpan.setEnabled(true);
            btnBatal.setEnabled(true);
            btnHapus.setEnabled(true);
            pnlInput.setEnabled(true);
            
            SetEnableKomponenInput(true);
        } else if (mode == "selected"){
            btnNew.setEnabled(true);
            btnEdit.setEnabled(true);
            btnSimpan.setEnabled(false);
            btnBatal.setEnabled(false);
            btnHapus.setEnabled(true);
            pnlInput.setEnabled(false);
            
            SetEnableKomponenInput(false);
        }
    }
    
    private void LoadBank() {
        try {
            List<Bank> banks = bankDAO.getAllBank();
            
            // Masukkan data ke JComboBox
            DefaultComboBoxModel<Bank> model = new DefaultComboBoxModel<>();
            for (Bank b : banks) {
                model.addElement(b); // Menambahkan objek Perkiraan ke model
            }
            cbBank.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(FrmTransaksiKas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void LoadArmada() {
        try {
            List<Map<String, Object>> result = armadaDAO.getArmadaByPage(1,"", 2000);
            
            // Masukkan data ke JComboBox
            DefaultComboBoxModel<Armada> model = new DefaultComboBoxModel<>();
            for (Map<String, Object> row : result) {
                Armada armada = armadaDAO.getArmadaById((Integer) row.get("id"));
                model.addElement(armada);                
            }
            cbArmada.setModel(model);
        } catch (SQLException ex) {
            AppUtils.showErrorDialog("Gagal load armada dengan error \n" + ex.getMessage());
        }
    }

    private void LoadDataTransaksiKas(int currentPage) {
        tableModel.setRowCount(0); // Bersihkan tabel
        
        List<Map<String, Object>> result = transaksiKasDAO.getTransaksiKasByPage(currentPage, edTglAwal.getDate(), edTglAkhir.getDate(), edFilter.getText());
        for (Map<String, Object> row : result) {
//            "Tanggal", "No. Act", "Nama Act", "Uraian", "Bank","No Polisi", "Pengeluaran", "Penerimaan", "Pc"}, 0
            
            tableModel.addRow(new Object[]{
                        (Integer) row.get("id"),
                        AppUtils.DateFormatShort((Date) row.get("tanggal")),
                        (String) row.get("kode"),
                        (String) row.get("nama"),
                        (String) row.get("keterangan"),
                        (String) row.get("no_rekening"),
                        (String) row.get("nopol"),
                        AppUtils.NumericFormat((Integer) row.get("nominal_keluar")),
                        AppUtils.NumericFormat((Integer) row.get("nominal_masuk")),
                        (String) row.get("user_create"),
                });
        }
        
    }

    private void inisialisasiEventTableModel() {
        tblTransaksiKas.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                // Memeriksa apakah ada baris yang dipilih
                if (!e.getValueIsAdjusting()) {
                    int selectedRow = tblTransaksiKas.getSelectedRow(); // Mendapatkan baris yang dipilih
                    if (selectedRow != -1) {
                        
                        Integer id = (Integer) tblTransaksiKas.getModel().getValueAt(selectedRow, 0);
                        LoadTransaksiKas(id);
                        setStatusTombol("selected");
                    }
                }
            }

            private void LoadTransaksiKas(Integer id) {
                try {
                    transaksiKas = transaksiKasDAO.getById(id);
                    if (transaksiKas != null){
                        perkiraanTransaksi = transaksiKas.getAkunTransaksi();
                        String akun = perkiraanTransaksi.toString();
                        edNamaAkun.setText(akun);
                        
                        if (transaksiKas.getBankId() > 0){
                            AppUtils.setSelectedIndexById(cbBank, transaksiKas.getBankId());
                        } else {
                          cbBank.setSelectedIndex(-1);
                        }
                        
                        if (transaksiKas.getArmadaId() > 0){
                            AppUtils.setSelectedIndexById(cbArmada, transaksiKas.getArmadaId());
                        } else {
                          cbArmada.setSelectedIndex(-1);
                        }                        
                        
                        edUangKeluar.setValue(transaksiKas.getNominalKeluar());
                        edUangMasuk.setValue(transaksiKas.getNominalMasuk());
                        edTanggal.setDate(transaksiKas.getTanggal());
                        edKeterangan.setText(transaksiKas.getKeterangan());
                        
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(FrmTransaksiKas.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    private boolean validasiInput() {
        if (perkiraanTransaksi == null){
            AppUtils.showWarningDialog("Akun biaya / pendapatan belum dipilih");
            edNamaAkun.requestFocusInWindow();
            return false;
        }
        
        if (cbBank.getSelectedIndex() < 0){
            AppUtils.showWarningDialog("Kas/Bank belum dipilih");
            cbBank.requestFocusInWindow();
            return false;
        }
      
        Integer nominalMasuk = 0;
        if (edUangMasuk.getValue() != null){
            nominalMasuk = ((Number) edUangMasuk.getValue()).intValue();
        }

        Integer nominalKeluar = 0;
        if (edUangKeluar.getValue() != null){
            nominalKeluar = ((Number) edUangKeluar.getValue()).intValue();
        }
            
        if ((nominalKeluar == 0) && (nominalMasuk == 0)){
            AppUtils.showWarningDialog("Uang keluar / masuk belum diisi");
            edUangKeluar.requestFocusInWindow();
            return false;
        }
        
        if ((nominalKeluar > 0) && (nominalMasuk > 0)){
            AppUtils.showWarningDialog("Uang keluar / masuk tidak boleh diisi semua");
            edUangKeluar.requestFocusInWindow();
            return false;
        }

        return true;
        
    }

    private void InisialisasitblTransaksiKas() {
        tableModel = new DefaultTableModel(new String[]{"ID","Tanggal", "No. Act", "Nama Act", "Uraian", "Bank","No Polisi", "Pengeluaran", "Penerimaan", "Pc"}, 0);
        tblTransaksiKas.setModel(tableModel);
        AppUtils.SetTableAligmentRight(tblTransaksiKas, 7);
        AppUtils.SetTableAligmentRight(tblTransaksiKas, 8);
        tblTransaksiKas.removeColumn(tblTransaksiKas.getColumnModel().getColumn(0));
    }
    
    private void SetEnableKomponenInput(boolean enable) {
        edNamaAkun.setEnabled(enable);
        btnAkunTransaksi.setEnabled(enable);
        cbBank.setEnabled(enable);
//        btnHapusBank.setEnabled(enable);
        cbArmada.setEnabled(enable);
        btnHapusArmada.setEnabled(enable);
        edTanggal.setEnabled(enable);
        edUangKeluar.setEnabled(enable);
        edUangMasuk.setEnabled(enable);
        edKeterangan.setEnabled(enable);
    }
}
