/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.bprasojo.ekspedisi;

import com.bprasojo.ekspedisi.dao.ArmadaDAO;
import com.bprasojo.ekspedisi.dao.BankDAO;
import com.bprasojo.ekspedisi.dao.StakeHolderDAO;
import com.bprasojo.ekspedisi.dao.TransaksiPembelianBBMDAO;
import com.bprasojo.ekspedisi.model.Armada;
import com.bprasojo.ekspedisi.model.Bank;
import com.bprasojo.ekspedisi.model.StakeHolder;
import com.bprasojo.ekspedisi.model.TransaksiPembelianBBM;
import com.bprasojo.ekspedisi.model.User;
import com.bprasojo.ekspedisi.utils.AppUtils;
import com.bprasojo.ekspedisi.utils.CustomFocusTraversalPolicy;
import com.bprasojo.ekspedisi.utils.LookupForm;
import java.beans.PropertyVetoException;
import java.sql.SQLException;
import java.util.Date;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author USER
 */
public class FrmInputBBM extends javax.swing.JInternalFrame {

    /**
     * Creates new form FrmTransaksiKas
     */
    
    private User user;
    private Armada armada = null;
    private TransaksiPembelianBBM transBeliBBM = null;
    private StakeHolder driver = null;
    
    private TransaksiPembelianBBMDAO transaksiPembelianBBMDAO = null;
    private ArmadaDAO armadaDAO = null;
    private StakeHolderDAO stakeHolderDAO = null;
    private BankDAO bankDAO = null;
    
    
    private DefaultTableModel tableModel;
            
    
    private int currentPage = 1;
    private boolean SilakanLoadData = false;
    
    public FrmInputBBM(User user) {
        this();
        this.user = user;
    }
    
    public FrmInputBBM() {
        initComponents();
        
        transaksiPembelianBBMDAO = new TransaksiPembelianBBMDAO();
        armadaDAO = new ArmadaDAO();
        stakeHolderDAO = new StakeHolderDAO();
        bankDAO = new BankDAO();
        
        try {
            setMaximum(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(FrmInputBBM.class.getName()).log(Level.SEVERE, null, ex);
        }        
        
        LoadBank();
        AppUtils.SetTanggalAwalBulan(edTglAwal);
        AppUtils.SetTanggalToday(edTglAkhir);
        
        edFilter.setText("");
        
        InisialisasiTableInputBBM();
        
        
        SilakanLoadData = true;
        LoadDataTransaksiPembelianBBM(currentPage);
        btnNewActionPerformed(null);
        
        setStatusTombol("awal");
        inisialisasiEventTableModel();
        
        pnlInput.setFocusTraversalPolicy(new CustomFocusTraversalPolicy(edNopol, btnKendaraan, edDriver, btnDriver, cbBank, edTanggal, edKMTerakhir, edKMSekarang, edPembelianBBM, edKeterangan));
        
        
        
    }
    // </editor-fold>

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        btnNew = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnSimpan = new javax.swing.JButton();
        btnBatal = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnKeluar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        pnlInput = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        edKeterangan = new javax.swing.JTextField();
        edTanggal = new com.toedter.calendar.JDateChooser();
        edKMSekarang = new javax.swing.JFormattedTextField();
        edKMTerakhir = new javax.swing.JFormattedTextField();
        jLabel9 = new javax.swing.JLabel();
        edKendaraan = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        edPembelianBBM = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        edDriver = new javax.swing.JTextField();
        btnDriver = new javax.swing.JButton();
        btnKendaraan = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        cbBank = new javax.swing.JComboBox<>();
        edNopol = new javax.swing.JTextField();
        pnlNextPrev = new javax.swing.JPanel();
        btnPrev = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        pnlFilter = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        edTglAwal = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        edTglAkhir = new com.toedter.calendar.JDateChooser();
        jLabel10 = new javax.swing.JLabel();
        edFilter = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblInputBBM = new javax.swing.JTable();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Input BBM");
        setMaximumSize(new java.awt.Dimension(104, 104));

        jToolBar1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jToolBar1.setRollover(true);

        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Add32.png"))); // NOI18N
        btnNew.setText("Tambah");
        btnNew.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnNew.setFocusable(false);
        btnNew.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNew.setMaximumSize(new java.awt.Dimension(60, 70));
        btnNew.setMinimumSize(new java.awt.Dimension(60, 70));
        btnNew.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });
        jToolBar1.add(btnNew);

        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Edit32.png"))); // NOI18N
        btnEdit.setText("Edit");
        btnEdit.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnEdit.setFocusable(false);
        btnEdit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEdit.setMaximumSize(new java.awt.Dimension(60, 70));
        btnEdit.setMinimumSize(new java.awt.Dimension(60, 70));
        btnEdit.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        jToolBar1.add(btnEdit);

        btnSimpan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Save32.png"))); // NOI18N
        btnSimpan.setText("Simpan");
        btnSimpan.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnSimpan.setFocusable(false);
        btnSimpan.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSimpan.setMaximumSize(new java.awt.Dimension(60, 70));
        btnSimpan.setMinimumSize(new java.awt.Dimension(60, 70));
        btnSimpan.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });
        jToolBar1.add(btnSimpan);

        btnBatal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Undo32.png"))); // NOI18N
        btnBatal.setText("Batal");
        btnBatal.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnBatal.setFocusable(false);
        btnBatal.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnBatal.setMaximumSize(new java.awt.Dimension(60, 70));
        btnBatal.setMinimumSize(new java.awt.Dimension(60, 70));
        btnBatal.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBatalActionPerformed(evt);
            }
        });
        jToolBar1.add(btnBatal);

        btnHapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Delete32.png"))); // NOI18N
        btnHapus.setText("Hapus");
        btnHapus.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnHapus.setFocusable(false);
        btnHapus.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnHapus.setMaximumSize(new java.awt.Dimension(60, 70));
        btnHapus.setMinimumSize(new java.awt.Dimension(60, 70));
        btnHapus.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });
        jToolBar1.add(btnHapus);

        btnKeluar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Close32.png"))); // NOI18N
        btnKeluar.setText("Keluar");
        btnKeluar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnKeluar.setFocusable(false);
        btnKeluar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnKeluar.setMaximumSize(new java.awt.Dimension(60, 70));
        btnKeluar.setMinimumSize(new java.awt.Dimension(60, 70));
        btnKeluar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeluarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnKeluar);

        getContentPane().add(jToolBar1, java.awt.BorderLayout.PAGE_START);

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setLayout(new java.awt.BorderLayout());

        pnlInput.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pnlInput.setFocusCycleRoot(true);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("No Polisi");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Tgl Transaksi");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("KM Terakhir");

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("KM Sekarang");

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Keterangan");

        edKMSekarang.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        edKMSekarang.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        edKMTerakhir.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        edKMTerakhir.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        edKMTerakhir.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                edKMTerakhirFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                edKMTerakhirFocusLost(evt);
            }
        });

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Kendaraan");

        edKendaraan.setEditable(false);
        edKendaraan.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        edKendaraan.setEnabled(false);
        edKendaraan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edKendaraanActionPerformed(evt);
            }
        });

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Jml Pembelian BBM");

        edPembelianBBM.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        edPembelianBBM.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel4.setText("Driver");

        edDriver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edDriverActionPerformed(evt);
            }
        });

        btnDriver.setText("...");
        btnDriver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDriverActionPerformed(evt);
            }
        });

        btnKendaraan.setText("...");
        btnKendaraan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKendaraanActionPerformed(evt);
            }
        });

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("Kas/Bank");

        javax.swing.GroupLayout pnlInputLayout = new javax.swing.GroupLayout(pnlInput);
        pnlInput.setLayout(pnlInputLayout);
        pnlInputLayout.setHorizontalGroup(
            pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInputLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(edTanggal, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlInputLayout.createSequentialGroup()
                        .addComponent(edKMTerakhir, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(edKMSekarang, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(edPembelianBBM, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(edKendaraan, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlInputLayout.createSequentialGroup()
                        .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(edDriver)
                            .addComponent(edNopol))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnKendaraan)
                            .addComponent(btnDriver)))
                    .addComponent(edKeterangan)
                    .addComponent(cbBank, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 234, Short.MAX_VALUE))
        );
        pnlInputLayout.setVerticalGroup(
            pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInputLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(edNopol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnKendaraan)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(edKendaraan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(edDriver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(btnDriver))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(cbBank, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(edTanggal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(edKMTerakhir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(edKMSekarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(edPembelianBBM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(edKeterangan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(pnlInput, java.awt.BorderLayout.NORTH);

        pnlNextPrev.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnPrev.setText("<< Prev");
        btnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevActionPerformed(evt);
            }
        });

        btnNext.setText("Next >>");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlNextPrevLayout = new javax.swing.GroupLayout(pnlNextPrev);
        pnlNextPrev.setLayout(pnlNextPrevLayout);
        pnlNextPrevLayout.setHorizontalGroup(
            pnlNextPrevLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlNextPrevLayout.createSequentialGroup()
                .addContainerGap(611, Short.MAX_VALUE)
                .addComponent(btnPrev)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNext)
                .addContainerGap())
        );
        pnlNextPrevLayout.setVerticalGroup(
            pnlNextPrevLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlNextPrevLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlNextPrevLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNext)
                    .addComponent(btnPrev))
                .addContainerGap())
        );

        jPanel1.add(pnlNextPrev, java.awt.BorderLayout.PAGE_END);

        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel4.setLayout(new java.awt.BorderLayout());

        jLabel1.setText("Periode");

        edTglAwal.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                edTglAwalPropertyChange(evt);
            }
        });

        jLabel2.setText("s.d.");

        edTglAkhir.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                edTglAkhirPropertyChange(evt);
            }
        });

        jLabel10.setText("Filter");

        edFilter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                edFilterKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout pnlFilterLayout = new javax.swing.GroupLayout(pnlFilter);
        pnlFilter.setLayout(pnlFilterLayout);
        pnlFilterLayout.setHorizontalGroup(
            pnlFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFilterLayout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(edTglAwal, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(12, 12, 12)
                .addComponent(edTglAkhir, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(edFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
        pnlFilterLayout.setVerticalGroup(
            pnlFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFilterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(pnlFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10)
                        .addComponent(edFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(edTglAkhir, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(edTglAwal, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10))
        );

        jPanel4.add(pnlFilter, java.awt.BorderLayout.NORTH);

        tblInputBBM.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblInputBBM.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tblInputBBMFocusGained(evt);
            }
        });
        jScrollPane1.setViewportView(tblInputBBM);

        jPanel4.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel4, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        transBeliBBM = new TransaksiPembelianBBM();
        armada = null;
        driver = null;
        
        AppUtils.setDefaultValues(edNopol, edKendaraan, edDriver, cbBank, edTanggal, edKMTerakhir, edKMSekarang, edPembelianBBM, edKeterangan);
        
        
        setStatusTombol("tambah");
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        if (validasiInput() == false){
            return;
        }
        
        try {
            transBeliBBM.setArmadaId(armada.getId());            
            transBeliBBM.setTanggal(edTanggal.getDate());
            transBeliBBM.setKmTerakhir(AppUtils.getIntValue(edKMTerakhir));
            transBeliBBM.setKmSekarang(AppUtils.getIntValue(edKMSekarang));
            transBeliBBM.setNominalBBM(AppUtils.getIntValue(edPembelianBBM));
            transBeliBBM.setKeterangan(edKeterangan.getText());
            transBeliBBM.setDriverId(driver.getId());
            transBeliBBM.setUserCreate(user.getUsername());
            transBeliBBM.setUserUpdate(user.getUsername());
            
            Bank selectedBank = (Bank) cbBank.getSelectedItem();
            transBeliBBM.setBankId(selectedBank.getId());
            
            transaksiPembelianBBMDAO.save(transBeliBBM);
            
            AppUtils.showInfoDialog("Data berhasil disimpan!");
            LoadDataTransaksiPembelianBBM(currentPage);
            

        } catch (SQLException ex) {
            AppUtils.showErrorDialog("Gagal simpan data dengan error : \n" + ex.getMessage());
        }
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        setStatusTombol("edit");
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        if (currentPage > 1) {
            currentPage--;
            LoadDataTransaksiPembelianBBM(currentPage);
        }
    }//GEN-LAST:event_btnPrevActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        currentPage++;
        LoadDataTransaksiPembelianBBM(currentPage);
    }//GEN-LAST:event_btnNextActionPerformed

    private void edFilterKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_edFilterKeyReleased
        if (SilakanLoadData){
            currentPage = 1;
            LoadDataTransaksiPembelianBBM(currentPage);
        }
    }//GEN-LAST:event_edFilterKeyReleased

    private void edTglAwalPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_edTglAwalPropertyChange
        if (SilakanLoadData){
            currentPage = 1;
            LoadDataTransaksiPembelianBBM(currentPage);
        }
    }//GEN-LAST:event_edTglAwalPropertyChange

    private void edTglAkhirPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_edTglAkhirPropertyChange
        if (SilakanLoadData){
            currentPage = 1;
            LoadDataTransaksiPembelianBBM(currentPage);
        }
    }//GEN-LAST:event_edTglAkhirPropertyChange

    private void btnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeluarActionPerformed
        dispose();
    }//GEN-LAST:event_btnKeluarActionPerformed

    private void btnBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBatalActionPerformed
        setStatusTombol("awal");
    }//GEN-LAST:event_btnBatalActionPerformed

    private void tblInputBBMFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblInputBBMFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_tblInputBBMFocusGained

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        boolean userConfirmed = AppUtils.showConfirmDialog("Apakah Anda yakin akan menghapus data?");
        
        if (userConfirmed) {
            try {
                transaksiPembelianBBMDAO.delete(transBeliBBM.getId());
                setStatusTombol("awal");
                LoadDataTransaksiPembelianBBM(currentPage);
            } catch (SQLException ex) {
                AppUtils.showErrorDialog("Gagal hapus data dengan error :\n" + ex.getMessage());
            }
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void edKendaraanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edKendaraanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_edKendaraanActionPerformed

    private void btnDriverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDriverActionPerformed
        String sqlQuery = "select a.kode, a.nama, a.alamat, a.no_ktp, a.id from stake_holder a " 
                          + " where a.jenis = 'Karyawan'";
        
        LookupForm lookupForm = new LookupForm(this, sqlQuery, true);
        Map<String, Object> selectedRecord = lookupForm.getSelectedRecord();
        if (selectedRecord != null) {
            int id = Integer.parseInt(selectedRecord.get("id").toString());
            LoadDriver(id);
            
        }
    }//GEN-LAST:event_btnDriverActionPerformed

    private void edKMTerakhirFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_edKMTerakhirFocusGained
        
    }//GEN-LAST:event_edKMTerakhirFocusGained

    private void edKMTerakhirFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_edKMTerakhirFocusLost
        
    }//GEN-LAST:event_edKMTerakhirFocusLost

    private void btnKendaraanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKendaraanActionPerformed
        String sqlQuery = "select a.nopol, a.kendaraan, a.pemilik from armada a";
        LookupForm lookupForm = new LookupForm(this, sqlQuery, true);
        Map<String, Object> selectedRecord = lookupForm.getSelectedRecord();
        if (selectedRecord != null) {
            try {
                // Mengambil nilai dengan nama kolom
                String nopol = selectedRecord.get("nopol").toString();
                armada = armadaDAO.getArmadaByNoPol(nopol);
                
                if (armada != null){
                    edNopol.setText(armada.getNopol());
                    edKendaraan.setText(armada.getKendaraan());
                    LoadDriver(armada.getDriverId());
                } else {
                    edNopol.setText("");
                    edKendaraan.setText("");
                    driver = null;
                    edDriver.setText("");
                }
            } catch (SQLException ex) {
                AppUtils.showErrorDialog("Ada kesalahan load data kendaraan dengan error \n" + ex.getMessage());
            }
            
        }
        
        transBeliBBM = new TransaksiPembelianBBM();
            
        AppUtils.SetTanggalToday(edTanggal);
        edKMSekarang.setValue(0);
        
        Integer lastKM;
        try {
            lastKM = transaksiPembelianBBMDAO.getLastKM(armada.getNopol());
        } catch (SQLException ex) {
            lastKM = 0;
            Logger.getLogger(FrmInputBBM.class.getName()).log(Level.SEVERE, null, ex);
        }
        edKMTerakhir.setValue(lastKM);
        
    }//GEN-LAST:event_btnKendaraanActionPerformed

    private void edDriverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edDriverActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_edDriverActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBatal;
    private javax.swing.JButton btnDriver;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnKeluar;
    private javax.swing.JButton btnKendaraan;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrev;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JComboBox<Bank> cbBank;
    private javax.swing.JTextField edDriver;
    private javax.swing.JTextField edFilter;
    private javax.swing.JFormattedTextField edKMSekarang;
    private javax.swing.JFormattedTextField edKMTerakhir;
    private javax.swing.JTextField edKendaraan;
    private javax.swing.JTextField edKeterangan;
    private javax.swing.JTextField edNopol;
    private javax.swing.JFormattedTextField edPembelianBBM;
    private com.toedter.calendar.JDateChooser edTanggal;
    private com.toedter.calendar.JDateChooser edTglAkhir;
    private com.toedter.calendar.JDateChooser edTglAwal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JPanel pnlFilter;
    private javax.swing.JPanel pnlInput;
    private javax.swing.JPanel pnlNextPrev;
    private javax.swing.JTable tblInputBBM;
    // End of variables declaration//GEN-END:variables

    private void setStatusTombol(String mode){
        if (mode == "awal"){
            btnNew.setEnabled(true);
            btnEdit.setEnabled(false);
            btnSimpan.setEnabled(false);
            btnBatal.setEnabled(false);
            btnHapus.setEnabled(false);
            pnlInput.setEnabled(false);
            
            SetEnableKomponenInput(false);
        } else if (mode == "tambah"){
            btnNew.setEnabled(false);
            btnEdit.setEnabled(false);
            btnSimpan.setEnabled(true);
            btnBatal.setEnabled(true);
            btnHapus.setEnabled(false);
            pnlInput.setEnabled(true);
            
            SetEnableKomponenInput(true);
        } else if (mode == "edit"){
            btnNew.setEnabled(false);
            btnEdit.setEnabled(false);
            btnSimpan.setEnabled(true);
            btnBatal.setEnabled(true);
            btnHapus.setEnabled(true);
            pnlInput.setEnabled(true);
            
            SetEnableKomponenInput(true);
        } else if (mode == "selected"){
            btnNew.setEnabled(true);
            btnEdit.setEnabled(true);
            btnSimpan.setEnabled(false);
            btnBatal.setEnabled(false);
            btnHapus.setEnabled(true);
            pnlInput.setEnabled(false);
            
            SetEnableKomponenInput(false);
        }
    }
    
    

    private void LoadDataTransaksiPembelianBBM(int currentPage) {
        tableModel.setRowCount(0); // Bersihkan tabel
        
        List<Map<String, Object>> result = transaksiPembelianBBMDAO.getTransaksiPembelianBBMByPage(currentPage, edTglAwal.getDate(), edTglAkhir.getDate(), edFilter.getText());
        for (Map<String, Object> row : result) {
            
            Integer kmTerakhir = (Integer) row.get("km_terakhir");
            Integer kmSekarang = (Integer) row.get("km_sekarang");
            Integer jarakTempuh = kmSekarang - kmTerakhir;
            
            tableModel.addRow(new Object[]{
                        (Integer) row.get("id"),
                        (String) row.get("nopol"),
                        (String) row.get("kendaraan"),
                        (String) row.get("pemilik"),
                        (String) row.get("driver"),
                        (String) row.get("nama_bank"),
                        (Date) row.get("tanggal"),
                        AppUtils.NumericFormat(kmTerakhir),
                        AppUtils.NumericFormat(kmSekarang),
                        AppUtils.NumericFormat(jarakTempuh),
                        AppUtils.NumericFormat((Integer) row.get("nominal_BBM")),
                        (String) row.get("keterangan"),                        
                        (String) row.get("user_create")
                });
        }
        
    }

    private void inisialisasiEventTableModel() {
        tblInputBBM.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                // Memeriksa apakah ada baris yang dipilih
                if (!e.getValueIsAdjusting()) {
                    int selectedRow = tblInputBBM.getSelectedRow(); // Mendapatkan baris yang dipilih
                    if (selectedRow != -1) {
                        
                        Integer id = (Integer) tblInputBBM.getModel().getValueAt(selectedRow, 0);
                        LoadTransaksiPembelianBBM(id);
                        setStatusTombol("selected");
                    }
                }
            }

            private void LoadTransaksiPembelianBBM(Integer id) {
                try {
                    transBeliBBM = transaksiPembelianBBMDAO.getById(id);
                    if (transBeliBBM != null){
                        armada = transBeliBBM.getArmada();
                        edNopol.setText(armada.getNopol());
                        edKendaraan.setText(armada.getKendaraan());
                        edTanggal.setDate(transBeliBBM.getTanggal());
                        edKMTerakhir.setValue(transBeliBBM.getKmTerakhir());
                        edKMSekarang.setValue(transBeliBBM.getKmSekarang());
                        edPembelianBBM.setValue(transBeliBBM.getNominalBBM());
                        edKeterangan.setText(transBeliBBM.getKeterangan());
                        
                        if (transBeliBBM.getDriverId() > 0){
                            LoadDriver(transBeliBBM.getDriverId());
                        } else {
                            driver = null;
                            edDriver.setText("");
                        }
                        
                        if (transBeliBBM.getBankId() > 0){
                            AppUtils.setSelectedIndexById(cbBank, transBeliBBM.getBankId());
                        } else {
                          cbBank.setSelectedIndex(-1);
                        }
                    }
                } catch (SQLException ex) {
                    AppUtils.showErrorDialog("Ada kesalahan load data dengan error :\n" + ex.getMessage());
                }
            }
        });
    }

    private boolean validasiInput() {
        if (armada == null){
            AppUtils.showWarningDialog("Kendaraan belum dipilih");
            edNopol.requestFocusInWindow();
            return false;
        }
        
        if (driver == null){
            AppUtils.showWarningDialog("Driver belum diisi");
            edDriver.requestFocusInWindow();
            return false;
        }
        
        if (cbBank.getSelectedIndex() < 0){
            AppUtils.showWarningDialog("Bank belum dipilih");
            cbBank.requestFocusInWindow();
            return false;
        }
        
        int kmTerakhir = AppUtils.getIntValue(edKMTerakhir);
        int kmSekarang = AppUtils.getIntValue(edKMSekarang);
      
        if ( kmTerakhir <= 0){
            AppUtils.showWarningDialog("KM terakhir belum diisi");
            edKMTerakhir.requestFocusInWindow();
            return false;
        }
        
        if (kmSekarang <= 0){
            AppUtils.showWarningDialog("KM sekarang belum diisi");
            edKMSekarang.requestFocusInWindow();
            return false;
        }
        
        if (kmTerakhir >= kmSekarang){
            AppUtils.showWarningDialog("KM sekarang harus lebih besar dari KM Terakhir");
            edKMSekarang.requestFocusInWindow();
            return false;
        }
        
        if (AppUtils.getIntValue(edPembelianBBM) <= 0){
            AppUtils.showWarningDialog("Pembelian BBM belum diinput");
            edPembelianBBM.requestFocusInWindow();
            return false;
        }

        return true;
        
    }

    private void InisialisasiTableInputBBM() {
        tableModel = new DefaultTableModel(new String[]{"ID","No Polisi","Kendaraan","Pemilik","Driver","Bank","Tanggal","KM Terakhir","KM Sekarang","Jarak Tempuh","Pembelian BBM","Keterangan", "Pc"}, 0);
        tblInputBBM.setModel(tableModel);
        
        AppUtils.SetTableAligmentRight(tblInputBBM, 7);
        AppUtils.SetTableAligmentRight(tblInputBBM, 8);
        AppUtils.SetTableAligmentRight(tblInputBBM, 9);
        AppUtils.SetTableAligmentRight(tblInputBBM, 10);
        
        tblInputBBM.removeColumn(tblInputBBM.getColumnModel().getColumn(0));
    }
    
    private void SetEnableKomponenInput(boolean enable) {
        edNopol.setEnabled(enable);
        btnKendaraan.setEnabled(enable);
        cbBank.setEnabled(enable);
        edTanggal.setEnabled(enable);
        edKMSekarang.setEnabled(enable);
        edKMTerakhir.setEnabled(enable);
        edPembelianBBM.setEnabled(enable);
        edKeterangan.setEnabled(enable);
        
        edDriver.setEnabled(enable);
        btnDriver.setEnabled(enable);
    }

    private void LoadDriver(int driverId) {
        try {
            driver = stakeHolderDAO.getById(driverId);
            if (driver != null){
                edDriver.setText(driver.getNama());
            } else {
                edDriver.setText("");
            }
        } catch (SQLException ex) {
            AppUtils.showWarningDialog("Driver tidak ditemukan");
        }
    }
    
    private void LoadBank() {
        try {
            List<Bank> banks = bankDAO.getAllBank();
            
            // Masukkan data ke JComboBox
            DefaultComboBoxModel<Bank> model = new DefaultComboBoxModel<>();
            for (Bank b : banks) {
                model.addElement(b); // Menambahkan objek Perkiraan ke model
            }
            cbBank.setModel(model);
        } catch (SQLException ex) {
            AppUtils.showWarningDialog("Gagal load bank dengan error : \n" + ex.getMessage());
        }
    }
}
